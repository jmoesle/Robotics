@model Robotics.Models.SpecificRobotsInRelation
@using Robotics.Models

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ICollection<SpecificRobotsInRelation> list = ViewBag.Specificrobotsinrelation;
    List<SpecificRobotsInRelation> listspecificrobotsinrelation = ViewBag.listspecificrobotsinrelation;

    List<Languages> Languages = ViewBag.Languages;

    int Specificrobots = ViewBag.Specificrobots;

    List<ContributingFieldsTrans> ContributingFieldsTrans = ViewBag.ContributingFieldsTrans;
    List<ModesOfLocomotionTrans> ModesOfLocomotionTrans = ViewBag.ModesOfLocomotionTrans;
    List<RoboticsPrinciplesTrans> RoboticsPrinciplesTrans = ViewBag.RoboticsPrinciplesTrans;
    List<BusinessTrans> BusinessTrans = ViewBag.BusinessTrans;
    List<BranchesTrans> BranchesTrans = ViewBag.BranchesTrans;
    List<TypesTrans> TypesTrans = ViewBag.TypesTrans;
    List<RobotComponentsAndDesignFeaturesTrans> RobotComponentsAndDesignFeaturesTrans = ViewBag.RobotComponentsAndDesignFeaturesTrans;
    List<RoboticsDevelopmentAndDevelopmentToolsTrans> RoboticsDevelopmentAndDevelopmentToolsTrans = ViewBag.RoboticsDevelopmentAndDevelopmentToolsTrans;
    List<RoboticsCompaniesTrans> RoboticsCompaniesTrans = ViewBag.RoboticsCompaniesTrans;
    List<RoboticsOrganizationsTrans> RoboticsOrganizationsTrans = ViewBag.RoboticsOrganizationsTrans;
    List<RoboticsCompetitionsTrans> RoboticsCompetitionsTrans = ViewBag.RoboticsCompetitionsTrans;
    List<InfluentialPeopleTrans> InfluentialPeopleTrans = ViewBag.InfluentialPeopleTrans;
    List<DegreeOfMaturityTrans> DegreeOfMaturityTrans = ViewBag.DegreeOfMaturityTrans;
    List<SpecificRobotsTrans> SpecificRobotsTrans = ViewBag.SpecificRobotsTrans;

    List<ContributingFields> SelectedContributingFields = ViewBag.SelectedContributingFields;
    List<ContributingFields> NotSelectedContributingFields = ViewBag.NotSelectedContributingFields;

    List<ModesOfLocomotion> SelectedModesOfLocomotion = ViewBag.SelectedModesOfLocomotion;
    List<ModesOfLocomotion> NotSelectedModesOfLocomotion = ViewBag.NotSelectedModesOfLocomotion;

    List<RoboticsPrinciples> SelectedRoboticsPrinciples = ViewBag.SelectedRoboticsPrinciples;
    List<RoboticsPrinciples> NotSelectedRoboticsPrinciples = ViewBag.NotSelectedRoboticsPrinciples;

    List<Business> SelectedBusiness = ViewBag.SelectedBusiness;
    List<Business> NotSelectedBusiness = ViewBag.NotSelectedBusiness;

    List<Branches> SelectedBranches = ViewBag.SelectedBranches;
    List<Branches> NotSelectedBranches = ViewBag.NotSelectedBranches;

    List<Types> SelectedTypes = ViewBag.SelectedTypes;
    List<Types> NotSelectedTypes = ViewBag.NotSelectedTypes;

    List<RobotComponentsAndDesignFeatures> SelectedRobotComponentsAndDesignFeatures = ViewBag.SelectedRobotComponentsAndDesignFeatures;
    List<RobotComponentsAndDesignFeatures> NotSelectedRobotComponentsAndDesignFeatures = ViewBag.NotSelectedRobotComponentsAndDesignFeatures;

    List<RoboticsDevelopmentAndDevelopmentTools> SelectedRoboticsDevelopmentAndDevelopmentTools = ViewBag.SelectedRoboticsDevelopmentAndDevelopmentTools;
    List<RoboticsDevelopmentAndDevelopmentTools> NotSelectedRoboticsDevelopmentAndDevelopmentTools = ViewBag.NotSelectedRoboticsDevelopmentAndDevelopmentTools;

    List<RoboticsCompanies> SelectedRoboticsCompanies = ViewBag.SelectedRoboticsCompanies;
    List<RoboticsCompanies> NotSelectedRoboticsCompanies = ViewBag.NotSelectedRoboticsCompanies;

    List<RoboticsOrganizations> SelectedRoboticsOrganizations = ViewBag.SelectedRoboticsOrganizations;
    List<RoboticsOrganizations> NotSelectedRoboticsOrganizations = ViewBag.NotSelectedRoboticsOrganizations;

    List<RoboticsCompetitions> SelectedRoboticsCompetitions = ViewBag.SelectedRoboticsCompetitions;
    List<RoboticsCompetitions> NotSelectedRoboticsCompetitions = ViewBag.NotSelectedRoboticsCompetitions;

    List<InfluentialPeople> SelectedInfluentialPeople = ViewBag.SelectedInfluentialPeople;
    List<InfluentialPeople> NotSelectedInfluentialPeople = ViewBag.NotSelectedInfluentialPeople;

    List<DegreeOfMaturity> SelectedDegreeOfMaturity = ViewBag.SelectedDegreeOfMaturity;
    List<DegreeOfMaturity> NotSelectedDegreeOfMaturity = ViewBag.NotSelectedDegreeOfMaturity;



    string selectedLanguage = @Context.Request.Path;
    int selectedLanguageInt = 1;
    if (selectedLanguage.Length > 5)
    {
        selectedLanguage = selectedLanguage.Substring(1, 2);
        foreach (var lang in Languages.Where(L => L.Code.ToLower().Equals(selectedLanguage))) { selectedLanguageInt = lang.Id; }
    };

}

<h2>Manage</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Property category:
            </th>
            <th>
                Selected properties:
            </th>
            <th>
                Not selected properties:
            </th>
           
            <th></th>
        </tr>
    </thead>
    <tbody>
                
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Contributingfields)
</td>
                        <td>
                            @foreach (var property in SelectedContributingFields) {
                            @foreach (var entry in ContributingFieldsTrans.Where(L => L.Contributingfields.Equals(property.Id))) { 
                            @if (entry.Language == selectedLanguageInt)
                            {
                                @if (entry.Name == null)
                                {
                                    @foreach (var backup in ContributingFieldsTrans.Where(L => L.Contributingfields.Equals(property.Id)))
                                    { 
                                        @if (backup.Language == 1)
                                        {
                                            <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="ContributingFields" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                        }
                                    }
                                } else { 
                                <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="ContributingFields"  asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                }
                            }
                            } 
                            }
                        </td>
                        <td>@foreach (var property in NotSelectedContributingFields)
                        {
                            @foreach (var entry in ContributingFieldsTrans.Where(L => L.Contributingfields.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in ContributingFieldsTrans.Where(L => L.Contributingfields.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="ContributingFields" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="ContributingFields" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a>
                                    }
                                }
                            }
                        }
                        </td>
                    </tr>
                 <tr>
                        <td>@Html.DisplayNameFor(model => model.Degreeofmaturity)
</td>
                        <td>
                            @foreach (var property in SelectedDegreeOfMaturity)
                            {
                                @foreach (var entry in DegreeOfMaturityTrans.Where(L => L.Degreeofmaturity.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Name == null)
                                        {
                                            @foreach (var backup in DegreeOfMaturityTrans.Where(L => L.Degreeofmaturity.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="DegreeOfMaturity" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="DegreeOfMaturity" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                        }
                                    }
                                }
                            }
                        </td>
                        <td>@foreach (var property in NotSelectedDegreeOfMaturity)
                        {
                            @foreach (var entry in DegreeOfMaturityTrans.Where(L => L.Degreeofmaturity.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in DegreeOfMaturityTrans.Where(L => L.Degreeofmaturity.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="DegreeOfMaturity" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="DegreeOfMaturity" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                    }
                                }
                            }
                        }</td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.Branches)
                    </td>
                    <td>
                        @foreach (var property in SelectedBranches)
                        {
                            @foreach (var entry in BranchesTrans.Where(L => L.Branches.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in BranchesTrans.Where(L => L.Branches.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="Branches" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="Branches" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                    }
                                }
                            }
                        }
                    </td>
                    <td>@foreach (var property in NotSelectedBranches)
                    {
                        @foreach (var entry in BranchesTrans.Where(L => L.Branches.Equals(property.Id)))
                        {
                            @if (entry.Language == selectedLanguageInt)
                            {
                                @if (entry.Name == null)
                                {
                                    @foreach (var backup in BranchesTrans.Where(L => L.Branches.Equals(property.Id)))
                                    {
                                        @if (backup.Language == 1)
                                        {
                                            <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="Branches" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                        }
                                    }
                                }
                                else
                                {
                                    <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="Branches" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                }
                            }
                        }
                    }</td>
                </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Business)
</td>
                        <td>
                            @foreach (var property in SelectedBusiness)
                            {
                                @foreach (var entry in BusinessTrans.Where(L => L.Business.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Name == null)
                                        {
                                            @foreach (var backup in BusinessTrans.Where(L => L.Business.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="Business" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="Business" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                        }
                                    }
                                }
                            }
                        </td>
                        <td>@foreach (var property in NotSelectedBusiness)
                        {
                            @foreach (var entry in BusinessTrans.Where(L => L.Business.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in BusinessTrans.Where(L => L.Business.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="Business" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="Business" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                    }
                                }
                            }
                        }</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Influentialpeople)
</td>
                        <td>
                            @foreach (var property in SelectedInfluentialPeople)
                            {
                                @foreach (var entry in InfluentialPeopleTrans.Where(L => L.Influentialpeople.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Lastname == null)
                                        {
                                            @foreach (var backup in InfluentialPeopleTrans.Where(L => L.Influentialpeople.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="InfluentialPeople" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Lastname (-)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="InfluentialPeople" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Lastname (-)</a><span> | </span>
                                        }
                                    }
                                }
                            }
                        </td>
                        <td>@foreach (var property in NotSelectedInfluentialPeople)
                        {
                            @foreach (var entry in InfluentialPeopleTrans.Where(L => L.Influentialpeople.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Lastname == null)
                                    {
                                        @foreach (var backup in InfluentialPeopleTrans.Where(L => L.Influentialpeople.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="InfluentialPeople" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Lastname (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="InfluentialPeople" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Lastname (+)</a><span> | </span>
                                    }
                                }
                            }
                        }</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Modesoflocomotion)
</td>
                        <td>
                            @foreach (var property in SelectedModesOfLocomotion)
                            {
                                @foreach (var entry in ModesOfLocomotionTrans.Where(L => L.Modesoflocomotion.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Name == null)
                                        {
                                            @foreach (var backup in ModesOfLocomotionTrans.Where(L => L.Modesoflocomotion.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="ModesOfLocomotion" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="ModesOfLocomotion" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                        }
                                    }
                                }
                            }
                        </td>
                        <td>@foreach (var property in NotSelectedModesOfLocomotion)
                        {
                            @foreach (var entry in ModesOfLocomotionTrans.Where(L => L.Modesoflocomotion.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in ModesOfLocomotionTrans.Where(L => L.Modesoflocomotion.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="ModesOfLocomotion" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="ModesOfLocomotion" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                    }
                                }
                            }
                        }</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Robotcomponentsanddesignfeatures)
</td>
                        <td>
                         @foreach (var property in SelectedRobotComponentsAndDesignFeatures)
                            {
                                @foreach (var entry in RobotComponentsAndDesignFeaturesTrans.Where(L => L.Robotcomponentsanddesignfeatures.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Name == null)
                                        {
                                            @foreach (var backup in RobotComponentsAndDesignFeaturesTrans.Where(L => L.Robotcomponentsanddesignfeatures.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RobotComponentsAndDesignFeatures" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RobotComponentsAndDesignFeatures" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                        }
                                    }
                                }
                            }
                        </td>
                        <td>@foreach (var property in NotSelectedRobotComponentsAndDesignFeatures)
                        {
                            @foreach (var entry in RobotComponentsAndDesignFeaturesTrans.Where(L => L.Robotcomponentsanddesignfeatures.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in RobotComponentsAndDesignFeaturesTrans.Where(L => L.Robotcomponentsanddesignfeatures.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RobotComponentsAndDesignFeatures" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RobotComponentsAndDesignFeatures" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                    }
                                }
                            }
                        }</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Roboticscompanies)
</td>
                        <td>
                          @foreach (var property in SelectedRoboticsCompanies)
                          {
                            @foreach (var entry in RoboticsCompaniesTrans.Where(L => L.Roboticscompanies.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in RoboticsCompaniesTrans.Where(L => L.Roboticscompanies.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsCompanies" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsCompanies" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                    }
                                }
                            }
                          }
                        </td>
                        <td>@foreach (var property in NotSelectedRoboticsCompanies)
                        {
                            @foreach (var entry in RoboticsCompaniesTrans.Where(L => L.Roboticscompanies.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in RoboticsCompaniesTrans.Where(L => L.Roboticscompanies.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsCompanies" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsCompanies" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                    }
                                }
                            }
                        }</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Roboticscompetitions)
</td>
                        <td>
                            @foreach (var property in SelectedRoboticsCompetitions)
                            {
                                @foreach (var entry in RoboticsCompetitionsTrans.Where(L => L.Roboticscompetitions.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Name == null)
                                        {
                                            @foreach (var backup in RoboticsCompetitionsTrans.Where(L => L.Roboticscompetitions.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsCompetitions" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsCompetitions" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                        }
                                    }
                                }
                            }
                        </td>
                        <td>@foreach (var property in NotSelectedRoboticsCompetitions)
                        {
                            @foreach (var entry in RoboticsCompetitionsTrans.Where(L => L.Roboticscompetitions.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in RoboticsCompetitionsTrans.Where(L => L.Roboticscompetitions.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsCompetitions" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsCompetitions" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                    }
                                }
                            }
                        }</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Roboticsdevelopmentanddevelopmenttools)
</td>
                        <td>
                          @foreach (var property in SelectedRoboticsDevelopmentAndDevelopmentTools)
                          {
                            @foreach (var entry in RoboticsDevelopmentAndDevelopmentToolsTrans.Where(L => L.Roboticsdevelopmentanddevelopmenttools.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in RoboticsDevelopmentAndDevelopmentToolsTrans.Where(L => L.Roboticsdevelopmentanddevelopmenttools.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsDevelopmentAndDevelopmentTools" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsDevelopmentAndDevelopmentTools" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                    }
                                }
                            }
                          }
                        </td>
                        <td>@foreach (var property in NotSelectedRoboticsDevelopmentAndDevelopmentTools)
                        {
                            @foreach (var entry in RoboticsDevelopmentAndDevelopmentToolsTrans.Where(L => L.Roboticsdevelopmentanddevelopmenttools.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in RoboticsDevelopmentAndDevelopmentToolsTrans.Where(L => L.Roboticsdevelopmentanddevelopmenttools.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsDevelopmentAndDevelopmentTools" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsDevelopmentAndDevelopmentTools" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                    }
                                }
                            }
                        }</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Roboticsorganizations)
</td>
                        <td>
                            @foreach (var property in SelectedRoboticsOrganizations)
                          {
                            @foreach (var entry in RoboticsOrganizationsTrans.Where(L => L.Roboticsorganizations.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in RoboticsOrganizationsTrans.Where(L => L.Roboticsorganizations.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsOrganizations" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsOrganizations" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                    }
                                }
                            }
                          }
                        </td>
                        <td>@foreach (var property in NotSelectedRoboticsOrganizations)
                        {
                            @foreach (var entry in RoboticsOrganizationsTrans.Where(L => L.Roboticsorganizations.Equals(property.Id)))
                            {
                                @if (entry.Language == selectedLanguageInt)
                                {
                                    @if (entry.Name == null)
                                    {
                                        @foreach (var backup in RoboticsOrganizationsTrans.Where(L => L.Roboticsorganizations.Equals(property.Id)))
                                        {
                                            @if (backup.Language == 1)
                                            {
                                                <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsOrganizations" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsOrganizations" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                    }
                                }
                            }
                        }</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Roboticsprinciples)
</td>
                        <td>
                            @foreach (var property in SelectedRoboticsPrinciples)
                            {
                                @foreach (var entry in RoboticsPrinciplesTrans.Where(L => L.Roboticsprinciples.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Name == null)
                                        {
                                            @foreach (var backup in RoboticsPrinciplesTrans.Where(L => L.Roboticsprinciples.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsPrinciples" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsPrinciples" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                        }
                                    }
                                }
                            }
                        </td>
                        <td> @foreach (var property in NotSelectedRoboticsPrinciples)
                            {
                                @foreach (var entry in RoboticsPrinciplesTrans.Where(L => L.Roboticsprinciples.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Name == null)
                                        {
                                            @foreach (var backup in RoboticsPrinciplesTrans.Where(L => L.Roboticsprinciples.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsPrinciples" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="RoboticsPrinciples" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                        }
                                    }
                                }
                            }</td>
                    </tr>
                    
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Types)
</td>
                        <td>
                            @foreach (var property in SelectedTypes)
                            {
                                @foreach (var entry in TypesTrans.Where(L => L.Types.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Name == null)
                                        {
                                            @foreach (var backup in TypesTrans.Where(L => L.Types.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="Types" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (-)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Remove" asp-route-specificrobots="@Specificrobots" asp-route-property="Types" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (-)</a><span> | </span>
                                        }
                                    }
                                }
                            }
                        </td>
                         <td>
                            @foreach (var property in NotSelectedTypes)
                            {
                                @foreach (var entry in TypesTrans.Where(L => L.Types.Equals(property.Id)))
                                {
                                    @if (entry.Language == selectedLanguageInt)
                                    {
                                        @if (entry.Name == null)
                                        {
                                            @foreach (var backup in TypesTrans.Where(L => L.Types.Equals(property.Id)))
                                            {
                                                @if (backup.Language == 1)
                                                {
                                                    <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="Types" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name (+)</a><span> | </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <a asp-action="Add" asp-route-specificrobots="@Specificrobots" asp-route-property="Types" asp-route-id="@property.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name (+)</a><span> | </span>
                                        }
                                    }
                                }
                            }
                        </td>
                    </tr>
                
    </tbody>
</table>

