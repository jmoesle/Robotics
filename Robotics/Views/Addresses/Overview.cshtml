@model IEnumerable<Robotics.Models.Addresses>
@using System.Text.Encodings.Web;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <style>
         /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
         #map {
             height: 80vh;
         }

        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100vh;
            margin: 0;
            padding: 0;
        }
    </style>
</head>


<h2>Overview</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>



    

    <div id="map"></div>
<div id="demo"></div>
<script>



                function initMap() {
                    var map = new google.maps.Map(document.getElementById('map'), {
                        zoom: 1,
                        center: { lat: 47.4333801, lng: 9.130003 }
                    });

                    //var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';



                    var infoWin = new google.maps.InfoWindow();
                    // Add some markers to the map.
                    // Note: The code uses the JavaScript Array.prototype.map() method to
                    // create an array of markers based on a given "locations" array.
                    // The map() method here has nothing to do with the Google Maps API.
                    var markers = locations.map(function (location, i) {
                        var marker = new google.maps.Marker({
                            position: location
                        });
                        google.maps.event.addListener(marker, 'click', function (evt) {
                            infoWin.setContent(location.info);
                            infoWin.open(map, marker);
                        })
                        return marker;
                    });


        // Add a marker clusterer to manage the markers.
        var markerCluster = new MarkerClusterer(map, markers,
            { imagePath: "https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m" });
    }
   @{Write("");

        Write(" var locations = [");
    }
    @foreach (var address in Model)
    {



        Write("{lat: " + address.Latitude.ToString().Replace(",", ".") + ", lng: " + address.Longitude.ToString().Replace(",", ".") + ", info: ");
        @Html.Raw("\"");
        Write(address.Firstname + " " + address.Lastname);
        @Html.Raw("<br />");
        Write(address.Street + " " + address.Streetnumber);
        @Html.Raw("<br />");
        Write(address.State + " " + address.Zip + " " + address.Country);
                @Html.Raw("\"");

                Write ("  },");
            }
    @{

                Write("  {lat: 10.000000, lng: 20.000000, info: ");
                @Html.Raw("\"");
                Write("Test Marker");
                @Html.Raw("\"");

                Write (" } ];");


            };


            google.maps.event.addDomListener(window, "load", initMap);


</script>

    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB-PajEphgimKHUxIS3otGcXcAlJrE8Nd4&callback=initMap">
    </script>

