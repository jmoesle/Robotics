@model Robotics.Models.SpecificRobotsTrans

@using Microsoft.EntityFrameworkCore
@using Robotics.Models
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ICollection<SpecificRobotsInRelation> list = ViewBag.Specificrobotsinrelation;
    List<SpecificRobotsInRelation> listspecificrobotsinrelation = ViewBag.listspecificrobotsinrelation;

    List<Languages> Languages = ViewBag.Languages;

    int Specificrobots = ViewBag.Specificrobots;

    List<ContributingFieldsTrans> ContributingFieldsTrans = ViewBag.ContributingFieldsTrans;
    List<ModesOfLocomotionTrans> ModesOfLocomotionTrans = ViewBag.ModesOfLocomotionTrans;
    List<RoboticsPrinciplesTrans> RoboticsPrinciplesTrans = ViewBag.RoboticsPrinciplesTrans;
    List<BusinessTrans> BusinessTrans = ViewBag.BusinessTrans;
    List<BranchesTrans> BranchesTrans = ViewBag.BranchesTrans;
    List<TypesTrans> TypesTrans = ViewBag.TypesTrans;
    List<RobotComponentsAndDesignFeaturesTrans> RobotComponentsAndDesignFeaturesTrans = ViewBag.RobotComponentsAndDesignFeaturesTrans;
    List<RoboticsDevelopmentAndDevelopmentToolsTrans> RoboticsDevelopmentAndDevelopmentToolsTrans = ViewBag.RoboticsDevelopmentAndDevelopmentToolsTrans;
    List<RoboticsCompaniesTrans> RoboticsCompaniesTrans = ViewBag.RoboticsCompaniesTrans;
    List<RoboticsOrganizationsTrans> RoboticsOrganizationsTrans = ViewBag.RoboticsOrganizationsTrans;
    List<RoboticsCompetitionsTrans> RoboticsCompetitionsTrans = ViewBag.RoboticsCompetitionsTrans;
    List<InfluentialPeopleTrans> InfluentialPeopleTrans = ViewBag.InfluentialPeopleTrans;
    List<DegreeOfMaturityTrans> DegreeOfMaturityTrans = ViewBag.DegreeOfMaturityTrans;
    List<SpecificRobotsTrans> SpecificRobotsTrans = ViewBag.SpecificRobotsTrans;

    List<ContributingFields> SelectedContributingFields = ViewBag.SelectedContributingFields;
    List<ContributingFields> NotSelectedContributingFields = ViewBag.NotSelectedContributingFields;

    List<ModesOfLocomotion> SelectedModesOfLocomotion = ViewBag.SelectedModesOfLocomotion;
    List<ModesOfLocomotion> NotSelectedModesOfLocomotion = ViewBag.NotSelectedModesOfLocomotion;

    List<RoboticsPrinciples> SelectedRoboticsPrinciples = ViewBag.SelectedRoboticsPrinciples;
    List<RoboticsPrinciples> NotSelectedRoboticsPrinciples = ViewBag.NotSelectedRoboticsPrinciples;

    List<Business> SelectedBusiness = ViewBag.SelectedBusiness;
    List<Business> NotSelectedBusiness = ViewBag.NotSelectedBusiness;

    List<Branches> SelectedBranches = ViewBag.SelectedBranches;
    List<Branches> NotSelectedBranches = ViewBag.NotSelectedBranches;

    List<Types> SelectedTypes = ViewBag.SelectedTypes;
    List<Types> NotSelectedTypes = ViewBag.NotSelectedTypes;

    List<RobotComponentsAndDesignFeatures> SelectedRobotComponentsAndDesignFeatures = ViewBag.SelectedRobotComponentsAndDesignFeatures;
    List<RobotComponentsAndDesignFeatures> NotSelectedRobotComponentsAndDesignFeatures = ViewBag.NotSelectedRobotComponentsAndDesignFeatures;

    List<RoboticsDevelopmentAndDevelopmentTools> SelectedRoboticsDevelopmentAndDevelopmentTools = ViewBag.SelectedRoboticsDevelopmentAndDevelopmentTools;
    List<RoboticsDevelopmentAndDevelopmentTools> NotSelectedRoboticsDevelopmentAndDevelopmentTools = ViewBag.NotSelectedRoboticsDevelopmentAndDevelopmentTools;

    List<RoboticsCompanies> SelectedRoboticsCompanies = ViewBag.SelectedRoboticsCompanies;
    List<RoboticsCompanies> NotSelectedRoboticsCompanies = ViewBag.NotSelectedRoboticsCompanies;

    List<RoboticsOrganizations> SelectedRoboticsOrganizations = ViewBag.SelectedRoboticsOrganizations;
    List<RoboticsOrganizations> NotSelectedRoboticsOrganizations = ViewBag.NotSelectedRoboticsOrganizations;

    List<RoboticsCompetitions> SelectedRoboticsCompetitions = ViewBag.SelectedRoboticsCompetitions;
    List<RoboticsCompetitions> NotSelectedRoboticsCompetitions = ViewBag.NotSelectedRoboticsCompetitions;

    List<InfluentialPeople> SelectedInfluentialPeople = ViewBag.SelectedInfluentialPeople;
    List<InfluentialPeople> NotSelectedInfluentialPeople = ViewBag.NotSelectedInfluentialPeople;

    List<DegreeOfMaturity> SelectedDegreeOfMaturity = ViewBag.SelectedDegreeOfMaturity;
    List<DegreeOfMaturity> NotSelectedDegreeOfMaturity = ViewBag.NotSelectedDegreeOfMaturity;



    string selectedLanguage = @Context.Request.Path;
    int selectedLanguageInt = 1;
    if (selectedLanguage.Length > 5)
    {
        selectedLanguage = selectedLanguage.Substring(1, 2);
        foreach (var lang in Languages.Where(L => L.Code.ToLower().Equals(selectedLanguage))) { selectedLanguageInt = lang.Id; }
    };


    List<InfoSourcesInRelation> InfoSourcesInRelation = ViewBag.InfoSourcesInRelation;
    List<InfoTypes> InfoTypes = ViewBag.InfoTypes;
    List<Websites> Websites = ViewBag.Websites;
    List<Books> Books = ViewBag.Books;
    List<Journals> Journals = ViewBag.Journals;
    List<Series> Series = ViewBag.Series;
    List<Collections> Collections = ViewBag.Collections;
    List<Unpublished> Unpublished = ViewBag.Unpublished;
    List<OfficialStatements> OfficialStatements = ViewBag.OfficialStatements;
    List<Newspapers> Newspapers = ViewBag.Newspapers;




}

<h2>@Html.DisplayFor(model => model.Name)</h2>

<div>
    <h4>@Html.DisplayNameFor(model => model.Description)</h4>
    <hr />
   

            @Html.Raw(Model.Description)
  

 
</div>
<div> 
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<div>
    <h4>SpecificRobotsInRelation</h4>
    <a asp-action="Manage" asp-controller="SpecificRobotsInRelations" asp-route-specificrobots="@Model.Specificrobots">Manage Relation</a><br />

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Resources.LabelForPropertyCategory
                </th>
                <th>
                    @Resources.LabelForProperties
                </th>
           

                <th></th>
            </tr>
        </thead>
        <tbody>

            <tr>
                <td>
                    @Resources.LabelForContributingFields
            </td>
            <td>
                @foreach (var property in SelectedContributingFields)
                {
                    @foreach (var entry in ContributingFieldsTrans.Where(L => L.Contributingfields.Equals(property.Id)))
                    {
                        @if (entry.Language == selectedLanguageInt)
                        {
                            @if (entry.Name == null)
                            {
                                @foreach (var backup in ContributingFieldsTrans.Where(L => L.Contributingfields.Equals(property.Id)))
                                {
                                    @if (backup.Language == 1)
                                    {
                                        <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="ContributingFieldsTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                                    }
                                }
                            }
                            else
                            {
                                <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="ContributingFieldsTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                            }
                        }
                    }
                }
            </td>
    </tr>
    <tr>
        <td>
           @Resources.LabelForDegreeOfMaturity
    </td>
    <td>
        @foreach (var property in SelectedDegreeOfMaturity)
        {
            @foreach (var entry in DegreeOfMaturityTrans.Where(L => L.Degreeofmaturity.Equals(property.Id)))
            {
                @if (entry.Language == selectedLanguageInt)
                {
                    @if (entry.Name == null)
                    {
                        @foreach (var backup in DegreeOfMaturityTrans.Where(L => L.Degreeofmaturity.Equals(property.Id)))
                        {
                            @if (backup.Language == 1)
                            {
                                <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="DegreeOfMaturityTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                            }
                        }
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="DegreeOfMaturityTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                    }
                }
            }
        }
    </td>
   
</tr>
<tr>
    <td>
        @Resources.LabelForBranches
    </td>
    <td>
        @foreach (var property in SelectedBranches)
        {
            @foreach (var entry in BranchesTrans.Where(L => L.Branches.Equals(property.Id)))
            {
                @if (entry.Language == selectedLanguageInt)
                {
                    @if (entry.Name == null)
                    {
                        @foreach (var backup in BranchesTrans.Where(L => L.Branches.Equals(property.Id)))
                        {
                            @if (backup.Language == 1)
                            {
                                <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="BranchesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                            }
                        }
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="BranchesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                    }
                }
            }
        }
    </td>

</tr>
<tr>
    <td>
        @Resources.LabelForBusiness
</td>
<td>
    @foreach (var property in SelectedBusiness)
    {
        @foreach (var entry in BusinessTrans.Where(L => L.Business.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Name == null)
                {
                    @foreach (var backup in BusinessTrans.Where(L => L.Business.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="BusinessTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="BusinessTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>
<tr>
    <td>
        @Resources.LabelForInfluentialPeople
</td>
<td>
    @foreach (var property in SelectedInfluentialPeople)
    {
        @foreach (var entry in InfluentialPeopleTrans.Where(L => L.Influentialpeople.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Lastname == null)
                {
                    @foreach (var backup in InfluentialPeopleTrans.Where(L => L.Influentialpeople.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="InfluentialPeopleTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Lastname </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="InfluentialPeopleTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Lastname </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>
<tr>
    <td>
        @Resources.LabelForModesOfLocomotion
</td>
<td>
    @foreach (var property in SelectedModesOfLocomotion)
    {
        @foreach (var entry in ModesOfLocomotionTrans.Where(L => L.Modesoflocomotion.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Name == null)
                {
                    @foreach (var backup in ModesOfLocomotionTrans.Where(L => L.Modesoflocomotion.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="ModesOfLocomotionTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="ModesOfLocomotionTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>
<tr>
    <td>
        @Resources.LabelForRoboticsComponentsAndDesignFeatures
    </td>
<td>
    @foreach (var property in SelectedRobotComponentsAndDesignFeatures)
    {
        @foreach (var entry in RobotComponentsAndDesignFeaturesTrans.Where(L => L.Robotcomponentsanddesignfeatures.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Name == null)
                {
                    @foreach (var backup in RobotComponentsAndDesignFeaturesTrans.Where(L => L.Robotcomponentsanddesignfeatures.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RobotComponentsAndDesignFeaturesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RobotComponentsAndDesignFeaturesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>
<tr>
    <td>
        @Resources.LabelForRoboticsCompanies
</td>
<td>
    @foreach (var property in SelectedRoboticsCompanies)
    {
        @foreach (var entry in RoboticsCompaniesTrans.Where(L => L.Roboticscompanies.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Name == null)
                {
                    @foreach (var backup in RoboticsCompaniesTrans.Where(L => L.Roboticscompanies.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsCompaniesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsCompaniesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>
<tr>
    <td>
        @Resources.LabelForRoboticsCompetitions
</td>
<td>
    @foreach (var property in SelectedRoboticsCompetitions)
    {
        @foreach (var entry in RoboticsCompetitionsTrans.Where(L => L.Roboticscompetitions.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Name == null)
                {
                    @foreach (var backup in RoboticsCompetitionsTrans.Where(L => L.Roboticscompetitions.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsCompetitionsTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsCompetitionsTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>
<tr>
    <td>
        @Resources.LabelForRoboticsDevelopmentAndDevelopmentTools</td>
<td>
    @foreach (var property in SelectedRoboticsDevelopmentAndDevelopmentTools)
    {
        @foreach (var entry in RoboticsDevelopmentAndDevelopmentToolsTrans.Where(L => L.Roboticsdevelopmentanddevelopmenttools.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Name == null)
                {
                    @foreach (var backup in RoboticsDevelopmentAndDevelopmentToolsTrans.Where(L => L.Roboticsdevelopmentanddevelopmenttools.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsDevelopmentAndDevelopmentToolsTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsDevelopmentAndDevelopmentToolsTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>
<tr>
    <td>
        @Resources.LabelForRoboticsOrganizations
</td>
<td>
    @foreach (var property in SelectedRoboticsOrganizations)
    {
        @foreach (var entry in RoboticsOrganizationsTrans.Where(L => L.Roboticsorganizations.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Name == null)
                {
                    @foreach (var backup in RoboticsOrganizationsTrans.Where(L => L.Roboticsorganizations.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsOrganizationsTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsOrganizationsTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>
<tr>
    <td>
        @Resources.LabelForRoboticsPrinciples
</td>
<td>
    @foreach (var property in SelectedRoboticsPrinciples)
    {
        @foreach (var entry in RoboticsPrinciplesTrans.Where(L => L.Roboticsprinciples.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Name == null)
                {
                    @foreach (var backup in RoboticsPrinciplesTrans.Where(L => L.Roboticsprinciples.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsPrinciplesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="RoboticsPrinciplesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>

<tr>
    <td>
        @Resources.LabelForTypes
</td>
<td>
    @foreach (var property in SelectedTypes)
    {
        @foreach (var entry in TypesTrans.Where(L => L.Types.Equals(property.Id)))
        {
            @if (entry.Language == selectedLanguageInt)
            {
                @if (entry.Name == null)
                {
                    @foreach (var backup in TypesTrans.Where(L => L.Types.Equals(property.Id)))
                    {
                        @if (backup.Language == 1)
                        {
                            <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="TypesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@backup.Name </a><span> | </span>
                        }
                    }
                }
                else
                {
                    <a asp-action="Details" asp-route-specificrobots="@Specificrobots" asp-controller="TypesTrans" asp-route-id="@entry.Id" asp-route-currentpath="@Context.Request.Path">@entry.Name </a><span> | </span>
                }
            }
        }
    }
</td>

</tr>

</tbody>
</table>


</div>


<div class="InfoSources">
    <h3>@Resources.LabelForInfoSources</h3>
    <a asp-action="SelectInfoType" asp-controller="InfoTypes" asp-route-tablename="SpecificRobots" asp-route-tableid="@Model.Specificrobots" asp-route-currentpath="@Context.Request.Path">+ @Resources.LabelForInfoSources</a> |
    <a asp-action="Manage" asp-controller="InfoSourcesInRelations" asp-route-tablename="SpecificRobots" asp-route-tableid="@Model.Specificrobots" asp-route-currentpath="@Context.Request.Path">Manage @Resources.LabelForInfoSources</a>

    @foreach (var item in InfoSourcesInRelation)
    {
        @if ("SpecificRobots" == item.Tablename)
        {
            @if (Model.Specificrobots == item.Tableid)
            {
                @foreach (var infotype in InfoTypes)
                {
                    @if (infotype.Name.Equals("Websites"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Websites.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Website">
                                    @if (infosource.Lastname == null)
                                    {
                                        <p>@infosource.Organization : @infosource.Title : @infosource.Title. @infosource.Publicationdate @infosource.Url (@infosource.Calldate). <a href="@infosource.Url">[Link]</a></p> }
                                    else
                                    { <p> @infosource.Lastname, @infosource.Firstname : @infosource.Title. @infosource.Publicationdate @infosource.Url (@infosource.Calldate). <a href="@infosource.Url">[Link]</a></p> }
                                </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Books"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Books.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Books">
                                    <p>
                                        @infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                        {<span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title. @infosource.Location <sup>@infosource.Edition</sup> @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.
                                    </p>
                                </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Journals"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Journals.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Journals">
                                    <p>
                                        @infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                        { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title. In: @infosource.Journalname, @infosource.Volume @infosource.Publicationdate, @infosource.Issue, @Resources.LabelForPagesAbbreviation @infosource.Pages. <a href="@infosource.Url">[Link]</a>
                                    </p>
                                </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Collections"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Collections.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Collections">
                                    <p>
                                        @infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                        { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> } In: @infosource.Publisher @Resources.LabelForPublisherAbbreviation: @infosource.Title. @infosource.Location <sup>@infosource.Edition</sup> @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.
                                    </p>
                                </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Series"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Series.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Series">
                                    <p>
                                        @infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                        { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title (=@infosource.Titleseries, @infosource.Volume). @infosource.Location <sup>@infosource.Edition</sup> @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.
                                    </p>
                                </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("OfficialStatements"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in OfficialStatements.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="OfficialStatements">
                                    <p>
                                        @infosource.Publisher @Resources.LabelForPublisherAbbreviation: @infosource.Title
                                        @if (infosource.Publication != null)
                                        {
                                            <span>In: @infosource.Publication, @infosource.Issue.</span> }  @infosource.Location @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.
                                        </p>
                                    </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Newspapers"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Newspapers.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Newspapers">
                                    <p>
                                        @infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                        { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title. In: @infosource.Newspapername @infosource.Issue @Resources.LabelForAt @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.
                                    </p>
                                </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Unpublished"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Unpublished.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Unpublished">
                                    <p>
                                        @infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                        { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title. @infosource.Type, @infosource.Schoollocation <sup>@infosource.Edition</sup> @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.
                                    </p>
                                </div>
                            }
                        }
                    }
                }
            }
        }
    }
</div>