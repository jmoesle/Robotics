@model Robotics.Models.SpecificRobotsTrans
@using Robotics.Models
@using Microsoft.EntityFrameworkCore

@inject RoboticsContext _context
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var listspecificrobotsinrelation = _context.SpecificRobotsInRelation.ToList();
    var ContributingFieldsTrans = _context.ContributingFieldsTrans.ToList();
    var ModesOfLocomotionTrans = _context.ModesOfLocomotionTrans.ToList();
    var RoboticsPrinciplesTrans = _context.RoboticsPrinciplesTrans.ToList();
    var BranchesTrans = _context.SpecificRobotsInRelation.ToList();
    var TypesTrans = _context.TypesTrans.ToList();
    var RobotComponentsAndDesignFeaturesTrans = _context.RobotComponentsAndDesignFeaturesTrans.ToList();
    var Roboticsdevelopmentanddevelopmenttools = _context.RoboticsDevelopmentAndDevelopmentToolsTrans.ToList();
    var RoboticsCompaniesTrans = _context.RoboticsCompaniesTrans.ToList();
    var RoboticsOrganizationsTrans = _context.RoboticsOrganizationsTrans.ToList();
    var RoboticsCompetitionsTrans = _context.RoboticsCompetitionsTrans.ToList();
    var InfluentialPeopleTrans = _context.InfluentialPeopleTrans.ToList();
    var DegreeOfMaturityTrans = _context.DegreeOfMaturityTrans.ToList();

    var InfoSourcesInRelation = _context.InfoSourcesInRelation.ToList();
    var InfoTypes = _context.InfoTypes.ToList();
    var Websites = _context.Websites.ToList();
    var Books = _context.Books.ToList();
    var Journals = _context.Journals.ToList();
    var Series = _context.Series.ToList();
    var Collections = _context.Collections.ToList();
    var Unpublished = _context.Unpublished.ToList();
    var OfficialStatements = _context.OfficialStatements.ToList();
    var Newspapers = _context.Newspapers.ToList();




}

<h2>Details</h2>

<div>
    <h4>SpecificRobotsTrans</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.Raw(Model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.LanguageNavigation)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LanguageNavigation.Code)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SpecificrobotsNavigation)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SpecificrobotsNavigation.Id)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>|
    <a asp-action="Create" asp-controller="SpecificRobotsInRelations" asp-route-specificrobots="@Model.Specificrobots">Create Relation</a><br />
    <a asp-action="Index" asp-controller="SpecificRobotsInRelations" asp-route-specificrobots="@Model.Specificrobots">Index of Relations</a><br />

</div>

<div>
    <h4>SpecificRobotsInRelation</h4>
    <hr />

    <dl class="dl-horizontal">
        
        <dt>
    Contributing Fields
</dt>
        <dd>
            @foreach (var item in listspecificrobotsinrelation)
            {

                @if (item.Specificrobots == Model.Specificrobots)
                {

                    @foreach (var contfield in ContributingFieldsTrans)
                    {

                        @if (item.Contributingfields == contfield.Contributingfields)
                        {

                            <a asp-action="Details" asp-controller="ContributingFieldsTrans" asp-route-id="@item.Id">@contfield.Name</a><br />
                        }
                    }
                }
            }
        </dd>
    </dl>
</div>
<a asp-action="SelectInfoType" asp-controller="InfoTypes" asp-route-tablename="SpecificRobots" asp-route-tableid="@Model.Specificrobots" asp-route-currentpath="@Context.Request.Path">+ @Resources.LabelForInfoSources</a>

<div>
    <h3>@Resources.LabelForInfoSources</h3>
    @foreach (var item in InfoSourcesInRelation)
    {
        @if ("SpecificRobots" == item.Tablename)
        {
            @if (Model.Specificrobots == item.Tableid)
            {

                @foreach (var infotype in InfoTypes)
                {
                @if (infotype.Name.Equals("Websites"))
                {
                    @if (infotype.Id == item.Infotype) { 
                    @foreach (var infosource in Websites.Where(A => A.Id.Equals(item.Infosourceid)))
                    {
                    <div class="Website">
                        @if(infosource.Lastname == null) { 
                        <p>@infosource.Organization : @infosource.Title : @infosource.Title. @infosource.Publicationdate @infosource.Url (@infosource.Calldate). <a href="@infosource.Url">[Link]</a></p> }
                        else  { <p> @infosource.Lastname, @infosource.Firstname : @infosource.Title. @infosource.Publicationdate @infosource.Url (@infosource.Calldate). <a href="@infosource.Url">[Link]</a></p> }
                      
                    </div>
                    }
                    }
                }
                    @if (infotype.Name.Equals("Books"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Books.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Books">
                                    
                                        <p>@infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null) {<span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title. @infosource.Location <sup>@infosource.Edition</sup> @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.</p>
                                    
                                </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Journals"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Journals.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Journals">
                                    <p>@infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                    { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title. In: @infosource.Journalname, @infosource.Volume @infosource.Publicationdate, @infosource.Issue, @Resources.LabelForPagesAbbreviation @infosource.Pages. <a href="@infosource.Url">[Link]</a></p>

</div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Collections"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Collections.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Collections">
                                    <p>@infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                    { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> } In: @infosource.Publisher @Resources.LabelForPublisherAbbreviation: @infosource.Title. @infosource.Location <sup>@infosource.Edition</sup> @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.</p>

                                       
                                </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Series"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Series.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Series">
                                    <p>@infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                    { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title (=@infosource.Titleseries, @infosource.Volume). @infosource.Location <sup>@infosource.Edition</sup> @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.</p>
<br />

</div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("OfficialStatements"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in OfficialStatements.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="OfficialStatements">
                                    
                                    <p>
                                        @infosource.Publisher @Resources.LabelForPublisherAbbreviation: @infosource.Title
                                   
                                        @if (infosource.Publication != null)
                                        {
<span>In: @infosource.Publication, @infosource.Issue.</span> }  @infosource.Location @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages. </p>
                               
</div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Newspapers"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Newspapers.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Newspapers">
                                    <p>@infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                    { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title. In: @infosource.Newspapername @infosource.Issue @Resources.LabelForAt @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.</p>

                                </div>
                            }
                        }
                    }
                    @if (infotype.Name.Equals("Unpublished"))
                    {
                        @if (infotype.Id == item.Infotype)
                        {
                            @foreach (var infosource in Unpublished.Where(A => A.Id.Equals(item.Infosourceid)))
                            {
                                <div class="Unpublished">
                                    <p>@infosource.Lastnameauhor1, @infosource.Firstnameauhor1 @if (infosource.Lastnameauhor2 != null)
                                    { <span> / @infosource.Lastnameauhor2, @infosource.Firstnameauhor2</span> } @if (infosource.Lastnameauhor3 != null)
                                        { <span> / @infosource.Lastnameauhor3, @infosource.Firstnameauhor3</span> } @if (infosource.Furtherauthors != null)
                                        { <span> / @infosource.Furtherauthors</span> }: @infosource.Title. @infosource.Type, @infosource.Schoollocation <sup>@infosource.Edition</sup> @infosource.Publicationdate, @Resources.LabelForPagesAbbreviation @infosource.Pages.</p>

                                       
</div>
                            }
                        }
                    }



                }
            }
            }
    }
    <div>
        <a asp-controller="Addresses" asp-action="CreateAndConnect" asp-route-tablename="SpecificRobots" asp-route-tableid="@Model.Specificrobots" asp-route-currentpath="@Context.Request.Path">+@Resources.LabelForAddresses</a>
    </div>
</div>